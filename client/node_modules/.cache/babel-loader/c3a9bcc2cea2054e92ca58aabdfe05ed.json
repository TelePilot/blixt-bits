{"ast":null,"code":"var _jsxFileName = \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  toggleCartHidden\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Your Cart Is Empty\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    toggleCartHidden();\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CustomButton","CartItem","toggleCartHidden","selectCartItems","CartDropdown","cartItems","history","length","map","cartItem","id","push","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,eAAT,QAAgC,iCAAhC;AAEA,OAAO,6BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBJ,EAAAA;AAArB,CAAD,KACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEOG,SAAS,CAACE,MAAV,GACAF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IAAK,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA3B,CADA,GAGA;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALP,CADJ,EASI,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAM;AAACH,IAAAA,OAAO,CAACK,IAAR,CAAa,WAAb;AAA0BT,IAAAA,gBAAgB;AAAG,GAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,CADJ;;AAcA,MAAMU,eAAe,GAAGd,wBAAwB,CAAC;AAC7CO,EAAAA,SAAS,EAAEF;AADkC,CAAD,CAAhD;;AAGA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCZ,EAAAA,gBAAgB,EAAE,MAAMY,QAAQ,CAACZ,gBAAgB,EAAjB;AADI,CAAL,CAAnC;;AAIA,eAAeH,UAAU,CAACF,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,YAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\n\nimport CustomButton from '../custom-button/custom-button.component'\nimport CartItem from '../cart-item/cart-item.component'\nimport { toggleCartHidden } from '../../redux/cart/cart.actions'\nimport { selectCartItems } from '../../redux/cart/cart.selectors'\n\nimport './cart-dropdown.styles.scss'\n\nconst CartDropdown = ({cartItems, history, toggleCartHidden}) => (\n    <div className=\"cart-dropdown\">\n        <div className=\"cart-items\">\n           {\n               cartItems.length ? \n               cartItems.map(cartItem => (<CartItem key={cartItem.id} item={cartItem}/>))\n               :\n               <span className=\"empty-message\">Your Cart Is Empty</span>\n           }\n        </div>\n        <CustomButton onClick={() => {history.push('/checkout');toggleCartHidden()}}>GO TO CHECKOUT</CustomButton>\n    </div>\n)\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems\n})\nconst mapDispatchToProps = dispatch => ({\n    toggleCartHidden: () => dispatch(toggleCartHidden())\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CartDropdown))"]},"metadata":{},"sourceType":"module"}