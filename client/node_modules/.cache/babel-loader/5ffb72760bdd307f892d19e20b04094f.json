{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/src/components/sign-in/sign-in.component.jsx\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: space-between;\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    margin: 10px 0;\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 380px;\\n    display: flex;\\n    flex-direction: column;\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nconst SingInContainer = styled.div(_templateObject());\nconst Title = styled.h2(_templateObject2());\nconst ButtonsContainer = styled.div(_templateObject3());\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      const emailSignInStart = this.props.emailSignInStart;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password;\n    return React.createElement(SingInContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"I Already Have An Account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: email,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(ButtonsContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Sign In with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/src/components/sign-in/sign-in.component.jsx"],"names":["React","styled","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SingInContainer","div","Title","h2","ButtonsContainer","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","state","email","password","handleChange","target","value","name","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'\n\n\nconst SingInContainer = styled.div`\n    width: 380px;\n    display: flex;\n    flex-direction: column;`\n\nconst Title = styled.h2`\n    margin: 10px 0;`\n\nconst ButtonsContainer = styled.div`\n    display: flex;\n    justify-content: space-between;`   \n    \nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault()\n\n        const { email, password } = this.state\n        const { emailSignInStart } = this.props\n        \n        emailSignInStart(email, password)\n    }\n    handleChange = event => {\n        const { value, name } = event.target\n\n        this.setState({\n            [name]: value\n        })\n    }\n    render() {\n    const { googleSignInStart } = this.props\n    const { email, password } = this.state\n        return(\n            <SingInContainer>\n                <Title>I Already Have An Account</Title>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                    name=\"email\" \n                    type=\"email\" \n                    value={email} \n                    required \n                    handleChange={this.handleChange}\n                    label=\"email\"\n                    />\n                 \n                    <FormInput \n                    name=\"password\" \n                    type=\"password\" \n                    value={password} \n                    required \n                    handleChange={this.handleChange}\n                    label=\"password\"\n                    />\n                    \n                    <ButtonsContainer>\n                        <CustomButton type=\"submit\" >\n                            Sign In\n                        </CustomButton>\n                        <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn >\n                            Sign In with Google\n                        </CustomButton>\n                    </ButtonsContainer>\n                   \n                </form>\n            </SingInContainer>\n        )\n    }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}