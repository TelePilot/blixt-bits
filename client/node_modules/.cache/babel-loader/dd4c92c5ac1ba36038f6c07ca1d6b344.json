{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuanity, cartItem) => accumalatedQuanity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuanity, cartItem) => accumalatedQuanity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumalatedQuanity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAGA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAExCE,IAAD,IAAUA,IAAI,CAACE,SAF0B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CACT,CAACC,kBAAD,EAAqBC,QAArB,KACAD,kBAAkB,GAAGC,QAAQ,CAACC,QAFrB,EAE+B,CAF/B,CAFiC,CAA3C;AAQP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IAAIA,SAAS,CAACI,MAAV,CACT,CAACC,kBAAD,EAAqBC,QAArB,KACAD,kBAAkB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAFzC,EAEgD,CAFhD,CAF4B,CAAtC","sourcesContent":["import { createSelector } from 'reselect'\n\nconst selectCart = state => state.cart\n\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    (cart) => cart.cartItems\n)\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart => cart.hidden\n)\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce(\n        (accumalatedQuanity, cartItem) => \n        accumalatedQuanity + cartItem.quantity, 0)\n    \n)\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce(\n        (accumalatedQuanity, cartItem) => \n        accumalatedQuanity + cartItem.quantity * cartItem.price, 0)\n)"]},"metadata":{},"sourceType":"module"}