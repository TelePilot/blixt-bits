{"ast":null,"code":"var _jsxFileName = \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport CartItem from '../cart-item/cart-item.component';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { CartDropdownContainer, CartItemsContainer, CartDropdownButton, EmptyMessage } from './cart-dropdown.styles.jsx';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(CartDropdownContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(CartItemsContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n})) : React.createElement(EmptyMessage, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Your Cart Is Empty\")), React.createElement(CartDropdownButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CartItem","toggleCartHidden","selectCartItems","CartDropdownContainer","CartItemsContainer","CartDropdownButton","EmptyMessage","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAGA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,eAAT,QAAgC,iCAAhC;AAEA,SAASC,qBAAT,EAAgCC,kBAAhC,EAAoDC,kBAApD,EAAwEC,YAAxE,QAA4F,4BAA5F;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KACjB,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEOF,SAAS,CAACG,MAAV,GACAH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IAAK,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA3B,CADA,GAGA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALP,CADJ,EAWI,oBAAC,kBAAD;AAAoB,EAAA,OAAO,EAAE,MAAM;AAACJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AAA0BL,IAAAA,QAAQ,CAACT,gBAAgB,EAAjB,CAAR;AAA6B,GAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,CADJ;;AAgBA,MAAMe,eAAe,GAAGlB,wBAAwB,CAAC;AAC7CU,EAAAA,SAAS,EAAEN;AADkC,CAAD,CAAhD;AAKA,eAAeH,UAAU,CAACF,OAAO,CAACmB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\n\n\nimport CartItem from '../cart-item/cart-item.component'\nimport { toggleCartHidden } from '../../redux/cart/cart.actions'\nimport { selectCartItems } from '../../redux/cart/cart.selectors'\n\nimport { CartDropdownContainer, CartItemsContainer, CartDropdownButton, EmptyMessage } from './cart-dropdown.styles.jsx'\n\nconst CartDropdown = ({cartItems, history, dispatch}) => (\n    <CartDropdownContainer>\n        <CartItemsContainer>\n        {\n               cartItems.length ? \n               cartItems.map(cartItem => (<CartItem key={cartItem.id} item={cartItem}/>))\n               :\n               <EmptyMessage>Your Cart Is Empty</EmptyMessage>\n           }\n        </CartItemsContainer>\n          \n   \n        <CartDropdownButton onClick={() => {history.push('/checkout');dispatch(toggleCartHidden())}}>GO TO CHECKOUT</CartDropdownButton>\n        </CartDropdownContainer>\n)\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems\n})\n\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown))"]},"metadata":{},"sourceType":"module"}