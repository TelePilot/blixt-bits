{"ast":null,"code":"import _objectSpread from \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/client/src/components/sign-in/sign-in.component.jsx\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: space-between;\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    margin: 10px 0;\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 380px;\\n    display: flex;\\n    flex-direction: column;\\n    \\n    @media screen and (max-width:800px) {\\n        margin-bottom: 225px;\\n    }\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nconst SignInContainer = styled.div(_templateObject());\nconst Title = styled.h2(_templateObject2());\nconst ButtonsContainer = styled.div(_templateObject3());\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"I Already Have An Account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    handleChange: handleChange,\n    label: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    handleChange: handleChange,\n    label: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(ButtonsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Sign In with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","styled","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","div","Title","h2","ButtonsContainer","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'\n\n\nconst SignInContainer = styled.div`\n    width: 380px;\n    display: flex;\n    flex-direction: column;\n    \n    @media screen and (max-width:800px) {\n        margin-bottom: 225px;\n    }`\n\nconst Title = styled.h2`\n    margin: 10px 0;`\n\nconst ButtonsContainer = styled.div`\n    display: flex;\n    justify-content: space-between;`   \n    \nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n    const [userCredentials, setCredentials] = useState({ email: '', password: ''})\n    const { email, password } = userCredentials\n    const handleSubmit = async event => {\n        event.preventDefault()\n\n\n        \n        emailSignInStart(email, password)\n    }\n   const handleChange = event => {\n        const { value, name } = event.target\n\n        setCredentials({\n            ...userCredentials, [name]: value\n        })\n    }\n    \n        return(\n            <SignInContainer>\n                <Title>I Already Have An Account</Title>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={handleSubmit}>\n                    <FormInput\n                    name=\"email\" \n                    type=\"email\" \n                    value={email} \n                    required \n                    handleChange={handleChange}\n                    label=\"email\"\n                    />\n                 \n                    <FormInput \n                    name=\"password\" \n                    type=\"password\" \n                    value={password} \n                    required \n                    handleChange={handleChange}\n                    label=\"password\"\n                    />\n                    \n                    <ButtonsContainer>\n                        <CustomButton type=\"submit\" >\n                            Sign In\n                        </CustomButton>\n                        <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn >\n                            Sign In with Google\n                        </CustomButton>\n                    </ButtonsContainer>\n                   \n                </form>\n            </SignInContainer>\n        )\n    }\n\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}