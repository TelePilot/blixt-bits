{"ast":null,"code":"import _objectSpread from \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport CartActionTypes from './cart.types';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducers = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case CartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducers;","map":{"version":3,"sources":["/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducers","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id","CLEAR_CART"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,eAAe,CAACU,kBAArB;AACI,+BACOH,KADP;AAEIH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFnB;;AAIJ,SAAKJ,eAAe,CAACW,QAArB;AACI,+BACOJ,KADP;AAEIF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF5B;;AAIJ,SAAKZ,eAAe,CAACa,WAArB;AACI,+BACON,KADP;AAEIF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFjC;;AAIJ,SAAKZ,eAAe,CAACc,oBAArB;AACI,+BACOP,KADP;AAEIF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CAAuBC,QAAQ,IACtCA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACI,OAAP,CAAeK,EADxB;AAFf;;AAMJ,SAAKjB,eAAe,CAACkB,UAArB;AACI,+BACOX,KADP;AAEIF,QAAAA,SAAS,EAAE;AAFf;;AAIA;AACI,aAAOE,KAAP;AA7BZ;AA+BH,CAhCD;;AAkCA,eAAeD,YAAf","sourcesContent":["import CartActionTypes from './cart.types'\nimport { addItemToCart, removeItemFromCart } from './cart.utils'\n\nconst INITIAL_STATE = {\n    hidden: true,\n    cartItems: []\n}\n\nconst cartReducers = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\n            return {\n                ...state,\n                hidden: !state.hidden\n            }\n        case CartActionTypes.ADD_ITEM:\n            return {\n                ...state,\n                cartItems: addItemToCart(state.cartItems, action.payload)\n            }\n        case CartActionTypes.REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: removeItemFromCart(state.cartItems, action.payload)\n            }\n        case CartActionTypes.CLEAR_ITEM_FROM_CART:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(cartItem => \n                    cartItem.id !== action.payload.id\n                    ) \n            }\n        case CartActionTypes.CLEAR_CART:\n            return {\n                ...state,\n                cartItems: []\n            }\n            default:\n                return state\n    }\n}\n\nexport default cartReducers"]},"metadata":{},"sourceType":"module"}