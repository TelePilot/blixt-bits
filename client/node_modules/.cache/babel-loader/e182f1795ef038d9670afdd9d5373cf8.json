{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/src/components/sign-up/sign-up.component.jsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    margin: 10px 0;\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    width: 380px;\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signUpStart } from '../../redux/user/user.actions';\nconst SignUpContainer = styled.div(_templateObject());\nconst Title = styled.h2(_templateObject2());\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const confirmPassword = this.state.confirmPassword;\n      const _this$props = this.props,\n            email = _this$props.email,\n            password = _this$props.password,\n            displayName = _this$props.displayName;\n\n      if (password !== confirmPassword) {\n        alert(\"passwords don't match\");\n        return;\n      }\n\n      signUpStart(email, password, displayName); // try {\n      //     const { user } = await auth.createUserWithEmailAndPassword(email, password)\n      //     await createUserProfileDocument(user, {displayName})\n      //     this.setState({\n      //     displayName: '',\n      //     email: '',\n      //     password: '',\n      //     confirmPassword: ''\n      //     })\n      // }\n      // catch(error) {\n      //     console.error(error)\n      // }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          displayName = _this$state.displayName,\n          email = _this$state.email,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword;\n    return React.createElement(SignUpContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapStateToDispatch = dispatch => ({\n  signUp: (email, password, displayName) => dispatch(signUpStart(email, password, displayName))\n});\n\nexport default connect(null, mapStateToDispatch)(SignUp);","map":{"version":3,"sources":["/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/src/components/sign-up/sign-up.component.jsx"],"names":["React","styled","connect","FormInput","CustomButton","auth","createUserProfileDocument","signUpStart","SignUpContainer","div","Title","h2","SignUp","Component","constructor","handleSubmit","event","preventDefault","confirmPassword","state","props","email","password","displayName","alert","handleChange","target","name","value","setState","render","mapStateToDispatch","dispatch","signUp"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils'\nimport { signUpStart } from '../../redux/user/user.actions'\n\n\nconst SignUpContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 380px;`\n\nconst Title = styled.h2`\n    margin: 10px 0;`\n\nclass SignUp extends React.Component {\n    constructor() {\n        super()\n\n        this.state = {\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault()\n\n        const  {confirmPassword} = this.state\n        const {email, password, displayName} = this.props\n        if(password !== confirmPassword) {\n            alert(\"passwords don't match\")\n            return\n        }\n        signUpStart(email, password, displayName)\n\n\n\n        // try {\n        //     const { user } = await auth.createUserWithEmailAndPassword(email, password)\n        //     await createUserProfileDocument(user, {displayName})\n\n        //     this.setState({\n        //     displayName: '',\n        //     email: '',\n        //     password: '',\n        //     confirmPassword: ''\n        //     })\n        // }\n        // catch(error) {\n        //     console.error(error)\n        // }\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target\n\n        this.setState({ [name]: value })\n    }\n    render() {\n        const {displayName, email, password, confirmPassword} = this.state\n\n        return(\n            <SignUpContainer>\n                <Title>\n                    I do not have an account\n                </Title>\n                <span> Sign up with your email and password</span>\n                <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n                    <FormInput \n                    type='text'\n                    name=\"displayName\"\n                    value={displayName}\n                    onChange={this.handleChange}\n                    label='Display Name'\n                    required\n                    />\n                    <FormInput \n                    type='email'\n                    name=\"email\"\n                    value={email}\n                    onChange={this.handleChange}\n                    label='Email'\n                    required\n                    />\n                    <FormInput \n                    type='password'\n                    name=\"password\"\n                    value={password}\n                    onChange={this.handleChange}\n                    label='Password'\n                    required\n                    />\n                    <FormInput \n                    type='password'\n                    name=\"confirmPassword\"\n                    value={confirmPassword}\n                    onChange={this.handleChange}\n                    label='Confirm Password'\n                    required\n                    />\n                    <CustomButton type=\"submit\" >SIGN UP</CustomButton>\n\n                </form>\n            </SignUpContainer>\n        )\n    }\n}\n\n\nconst mapStateToDispatch = dispatch => ({\n    signUp: (email, password, displayName) => dispatch(signUpStart(email, password, displayName)) \n})\n\nexport default connect(null, mapStateToDispatch)(SignUp)"]},"metadata":{},"sourceType":"module"}