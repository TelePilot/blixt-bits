{"ast":null,"code":"import _objectSpread from \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/src/components/sign-up/sign-up.component.jsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    margin: 10px 0;\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    width: 380px;\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nconst SignUpContainer = styled.div(_templateObject());\nconst Title = styled.h2(_templateObject2());\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/blixt/Desktop/WebProjects/Learning/react-course/blixt-bits/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","styled","connect","FormInput","CustomButton","signUpStart","SignUpContainer","div","Title","h2","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\n\nimport { signUpStart } from '../../redux/user/user.actions'\n\n\nconst SignUpContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 380px;`\n\nconst Title = styled.h2`\n    margin: 10px 0;`\n\nconst SignUp = ({signUpStart}) => {\n    const [userCredentials, setUserCredentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n    const { displayName, email, password, confirmPassword} = userCredentials\n\n    const handleSubmit = async event => {\n        event.preventDefault()\n\n        if(password !== confirmPassword) {\n            alert(\"passwords don't match\")\n            return\n        }\n        signUpStart({email, password, displayName})\n\n\n    }\n\n    const handleChange = event => {\n        const { name, value } = event.target\n\n        setUserCredentials({...userCredentials, [name]: value })\n    }\n        \n        return(\n            <SignUpContainer>\n                <Title>\n                    I do not have an account\n                </Title>\n                <span> Sign up with your email and password</span>\n                <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n                    <FormInput \n                    type='text'\n                    name=\"displayName\"\n                    value={displayName}\n                    onChange={handleChange}\n                    label='Display Name'\n                    required\n                    />\n                    <FormInput \n                    type='email'\n                    name=\"email\"\n                    value={email}\n                    onChange={handleChange}\n                    label='Email'\n                    required\n                    />\n                    <FormInput \n                    type='password'\n                    name=\"password\"\n                    value={password}\n                    onChange={handleChange}\n                    label='Password'\n                    required\n                    />\n                    <FormInput \n                    type='password'\n                    name=\"confirmPassword\"\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label='Confirm Password'\n                    required\n                    />\n                    <CustomButton type=\"submit\" >SIGN UP</CustomButton>\n\n                </form>\n            </SignUpContainer>\n        )\n    }\n\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials)) \n})\n\nexport default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}